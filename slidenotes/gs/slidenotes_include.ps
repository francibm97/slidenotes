% Copyright (C) 2001-2018 Artifex Software, Inc.
% All Rights Reserved.
%
% This software is provided AS-IS with no warranty, either express or
% implied.
%
% This software is distributed under license and may not be copied,
% modified or distributed except as expressly authorized under the terms
% of the license contained in the file LICENSE in this distribution.
%
% Refer to licensing information at http://www.artifex.com or contact
% Artifex Software, Inc.,  1305 Grant Avenue - Suite 200, Novato,
% CA 94945, U.S.A., +1(415)492-9861, for further information.
%

/get_crop_box {
	dup % duplica la pagina
	/CropBox pget {
		oforce_elems
		5 -1 roll % metti la pagina in cima allo stack
		%% Complicated stuff. We need to use the 'Box' we identified (if any), but we
		%% need to clamp the boundaries of the 'Box' to the MediaBox. This appears to
		%% be what Acrobat does. The complication arises because the Box values don't
		%% have to be sensibly positive, its permissible to have the MediaBox set up
		%% so that it extends down and left instead of up and right. We take care of the
		%% content when we st up the CTM, but we do need to make sure that we clamp
		%% the BoundingBox, and that means we need to take direcitonality into account...
		get_media_box { % /SomeBox x0 y0 x1 y1 [MediaBox]
		aload pop               % /SomeBox x0 y0 x1 y1 X0 Y0 X1 Y1
		%% Start with the width, get the X0 and X1 values of the MediaBox
		3 index                 % /SomeBox x0 y0 x1 y1 X0 Y0 X1 Y1 X0
		2 index                 % /SomeBox x0 y0 x1 y1 X0 Y0 X1 Y1 X0 X1
		gt {
			%% Media extends to left
			4 -1 roll             % /SomeBox x0 y0 x1 y1 Y0 X1 Y1 X0
			8 -1 roll             % /SomeBox y0 x1 y1 Y0 X1 Y1 X0 x0
			.min                  % /SomeBox y0 x1 y1 Y0 X1 Y1 mX0
			7 1 roll              % /SomeBox mX0 y0 x1 y1 Y0 X1 Y1
			exch                  % /SomeBox mX0 y0 x1 y1 Y0 Y1 X1
			5 -1 roll             % /SomeBox mX0 y0 y1 Y0 Y1 X1 x1
			.max                  % /SomeBox mX0 y0 y1 Y0 Y1 mX1
			5 1 roll              % /SomeBox mX0 mX1 y0 y1 Y0 Y1
		}{
			%% Media extends to right
			4 -1 roll             % /SomeBox x0 y0 x1 y1 Y0 X1 Y1 X0
			8 -1 roll             % /SomeBox y0 x1 y1 Y0 X1 Y1 X0 x0
			.max                  % /SomeBox y0 x1 y1 Y0 X1 Y1 mX0
			7 1 roll              % /SomeBox mX0 y0 x1 y1 Y0 X1 Y1
			exch                  % /SomeBox mX0 y0 x1 y1 Y0 Y1 X1
			5 -1 roll             % /SomeBox mX0 y0 y1 Y0 Y1 X1 x1
			.min                  % /SomeBox mX0 y0 y1 Y0 Y1 mX1
			5 1 roll              % /SomeBox mX0 mX1 y0 y1 Y0 Y1
		} ifelse

		%% Now deal with the height
		2 copy                  % /SomeBox mX0 mX1 y0 y1 Y0 Y1 Y0 Y1
		gt {
			%% Media extends down
			exch                  % /SomeBox mX0 mX1 y0 y1 Y1 Y0
			4 -1 roll             % /SomeBox mX0 mX1 y1 Y1 Y0 y0
			.min                  % /SomeBox mX0 mX1 y1 Y1 mY0
			3 1 roll              % /SomeBox mX0 mX1 mY0 y1 Y1
			.max                  % /SomeBox mX0 mX1 mY0 mY1
		}{
			%% Media extends up
			exch                  % /SomeBox mX0 mX1 y0 y1 Y1 Y0
			4 -1 roll             % /SomeBox mX0 mX1 y1 Y1 Y0 y0
			.max                  % /SomeBox mX0 mX1 y1 Y1 mY0
			3 1 roll              % /SomeBox mX0 mX1 mY0 y1 Y1
			.min                  % /SomeBox mX0 mX1 mY0 mY1
		} ifelse
			exch                    % /SomeBox mX0 mX1 mY1 mY0
			3 1 roll                % /SomeBox mX0 mY0 mX1 mY1
		}{
			pop
		} ifelse
	}
	{
		%(   **** Error: Page has no /CropBox attribute. Using the /MediaBox.\n) pdfformaterror
		%(               Output may be incorrect.\n) pdfformaterror
		get_media_box pop oforce_elems
	} ifelse
} bind executeonly def

/.free_page_resources {   % - .free_page_resources -
  Page /Resources pget {
    /Shading knownoget {
      { dup type /dicttype eq {
          dup /.shading_dict known {
            dup /.shading_dict undef
          } if
        } if
        pop pop
      } forall
    } if
  } if
} bind executeonly def

/draw_page_content {    % <rettangolo_visibile> <pagedict> draw_page_content -
   %%%pdfshowpage_setpage%%%
   
   
   %%%pdfshowpage_finish%%%
   save /PDFSave exch store
   /PDFdictstackcount countdictstack store
   %/PDFexecstackcount count 2 sub store
   /PDFexecstackcount count 3 sub store % 3 invece di 2 per cancellare anche rettangolo_visibile
   (before exec) VMDEBUG

   % set up color space substitution (this must be inside the page save)
   pdfshowpage_setcspacesub

        % Display the actual page contents.
   8 dict begin
   /BXlevel 0 def
   /BMClevel 0 def
   /OFFlevels 0 dict def
   /BGDefault currentblackgeneration def
   /UCRDefault currentundercolorremoval def
        %****** DOESN'T HANDLE COLOR TRANSFER YET ******
   /TRDefault currenttransfer def
  matrix currentmatrix 2 dict
 
  3 index % copia in cima allo stack l'array che contiene il rettangolo_visibile
  1 index % copia in cima allo stack il dizionario
  /ClipRect % inserisci in cima allo stack la chiave
  3 -1 roll % shifta lo stack per avere dizionario chiave valore
  put % inserisci la chiave nel dizionario con quel valore, definendo il rettangolo_visibile
  
  dictbeginpage setmatrix
  /DefaultQstate qstate store

  count 1 sub /pdfemptycount exch store
        % If the page uses any transparency features, show it within
        % a transparency group.
  % parte nuova
  % In Ogni caso meglio prima processare il pdf con l'opzione -dCompatibilityLevel=1.3
  % che rimuove la trasparenza e renderizza le immagini perchè pdf 1.3 non ha la trasparenza
  % perchè la trasparenza diventa nera :(
  
  currentpagedevice /PageUsesTransparency .knownget not {dup pageusestransparency} if
  dup /PDFusingtransparency exch def {
    % If the current device isn't CMYK, or if it is a HighLevelDevice (pdfwrite) we
    % don't need the special handling of Overprint transparency, so disable the checking.
    currentpagedevice dup /Colors get 4 lt exch /HighLevelDevice known or {
      /checkOPtrans { pop false } def	% NB: original will be restored from PDFsave
    } if
    % Show the page within a PDF 1.4 device filter.
    0 .pushpdf14devicefilter {
      /DefaultQstate qstate store		% device has changed -- reset DefaultQstate
      % If the page has a Group, enclose contents in transparency group.
      % (Adobe Tech Note 5407, sec 9.2)
      dup /Group knownoget {
        1 index /CropBox pget {
          /CropBox exch
        } {
          1 index get_media_box pop /MediaBox exch
        } ifelse
        oforce_elems normrect_elems fix_empty_rect_elems 4 array astore .beginformgroup
        showpagecontents
        .endtransparencygroup
      } {
        showpagecontents
      } ifelse
    } stopped {
      % abort the transparency device
      .abortpdf14devicefilter
      /DefaultQstate qstate store	% device has changed -- reset DefaultQstate
      stop
    } if
    { } settransfer		% identity transfer during popdevice (put_image)
    .poppdf14devicefilter	% NB: reset to DefaultQstate will also restore transfer function
    /DefaultQstate qstate store	% device has changed -- reset DefaultQstate
  } {
    /checkOPtrans { pop false } def	% no-op the check if the page doesn't use transparency
                                % NB: original will be restored from PDFsave
    showpagecontents
  } ifelse
 
 
  %dup pageusestransparency dup /PDFusingtransparency exch def {
  %  % Show the page within a PDF 1.4 device filter.
  %  0 .pushpdf14devicefilter {
  %    /DefaultQstate qstate store       % device has changed -- reset DefaultQstate
  %    % If the page has a Group, enclose contents in transparency group.
  %    % (Adobe Tech Note 5407, sec 9.2)
  %    dup /Group knownoget {
  %      1 index /CropBox pget {
  %        /CropBox exch
  %      } {
  %        1 index get_media_box pop /MediaBox exch
  %      } ifelse
  %      oforce_elems normrect_elems fix_empty_rect_elems 4 array astore .beginformgroup 
  %      showpagecontents
  %      .endtransparencygroup
  %    } {
  %      showpagecontents
  %    } ifelse
  %  } stopped {
  %    % abort the transparency device 
  %    .abortpdf14devicefilter
  %    /DefaultQstate qstate store   % device has changed -- reset DefaultQstate
  %    stop
  %  } if .poppdf14devicefilter
  %  /DefaultQstate qstate store % device has changed -- reset DefaultQstate
  %} {
  %  showpagecontents
  %} ifelse

  .free_page_resources
  % todo: mixing drawing ops outside the device filter could cause
  % problems, for example with the pnga device.

  end           % scratch dict
  % Some PDF files don't have matching q/Q (gsave/grestore) so we need
  % to clean up any left over dicts from the dictstack
     
  PDFdictstackcount //false
  { countdictstack 2 index le { exit } if
    currentdict /n known not or
    end
  } loop 
  
  pop
  count PDFexecstackcount sub { pop } repeat
   
  Repaired      % pass Repaired state around the restore
  PDFSave restore
  /Repaired exch def 
} bind executeonly def

/mm { 72 25.4 div mul } bind executeonly def
  
